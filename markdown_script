---
title: "Quarterly output manipulation National Accounts"
author: "Rendell E . de Kort"
date: "January 31, 2019"
output: word_document
---

```{r v}
data1<-read.csv("Q_NO_DENTON.csv")
data2<-read.csv("Q_DENTON.csv")
stavaza<-read.csv("stavazaR.csv")
```

## About this file

This is an explanatory note for the steps to convert quarterly output information obtained through the "Herbynization", "quarterly estimation" and "quarterly exceptions" file.

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.



## Reading in the data (not working in the Shiny code)
Data should be in "Comma Seperated Values" (csv.) format to be loaded in and saved in the folder that is consistent with the Working Directory of th R session.


Load the dplyr package and transform the data into a tbl_df format and merge.

```{r a}
library(dplyr)
data1                  <- tbl_df(data1)
data2                  <- tbl_df(data2)
databind               <- bind_rows(data1,data2)
rm(data1)
rm(data2)
```

Filtering data to contain the sections that we are interested seperatly


```{r b}
Nominal_Q              <- filter(databind,databind$Description=="Nominal VA")
Nominal_Q$Description  <- NULL

Real_Q                 <- filter(databind,databind$Description=="Real VA")
Real_Q$Description     <- NULL

Nominal_Y              <- filter(databind,databind$Description=="B nominal")
Nominal_Y$Description  <- NULL

Real_Y                 <- filter(databind,databind$Description=="B Real")
Real_Y$Description     <- NULL

Deflator               <- filter(databind,databind$Description=="Deflator")
Deflator$Description   <- NULL

rm(databind)
```

Creating a check to verify whether the year figures are consistent with Stavaza
```{r c}
Check.Nominal.Y.2013   <-filter(Nominal_Y,Period=="2013")

as.character(stavaza$Werk.ISIC)
 
stavaza                <- select(stavaza,
                           c(Werk.ISIC,B1.g,TAB.CAT_DESCRIPTION,ISIC_DESCRIPTION))

Check.Nominal.Y.2013   <- select(Check.Nominal.Y.2013,c(STATID,Value))

Test.equality          <- left_join(stavaza,Check.Nominal.Y.2013,
                   by=c("Werk.ISIC"="STATID"))

rm(Check.Nominal.Y.2013)

Test.equality$Check    <-Test.equality$Value==Test.equality$B1.g

Test.equality          <- Test.equality[,c(1,3,4,2,5,6)]

rm(stavaza)

```

Convert from long form to wide format
```{r d}
library(tidyr)
Deflator   <-spread(Deflator,STATID,Value)
Nominal_Q  <-spread(Nominal_Q,STATID,Value)
Nominal_Y  <-spread(Nominal_Y,STATID,Value)
Real_Q     <-spread(Real_Q,STATID,Value)
Real_Y     <-spread(Real_Y,STATID,Value)

```


Write csv files. Not working at the moment. xlsx package doesn't load.
```{r}
write.xlsx(Deflator, file="Output_Q_NA.xlsx",
      sheetName="Deflator", append=FALSE)
write.xlsx(Nominal_Q, file="Output_Q_NA.xlsx", 
           sheetName="Nominal_Q", append=TRUE)
write.xlsx(Real_Q, file="Output_Q_NA.xlsx", 
           sheetName="Real_Q", append=TRUE)
write.xlsx(Nominal_Y, file="Output_Q_NA.xlsx", 
           sheetName="Nominal_Y", append=TRUE)
write.xlsx(Real_Y, file="Output_Q_NA.xlsx", 
           sheetName="Real_Y", append=TRUE)
write.xlsx(Test.equality, file="Output_Q_NA.xlsx", 
           sheetName="Summary", append=TRUE)
```


This does work. However, would like to have all the tabs combined.
```{r }
write.csv(Deflator, file =       "Output_Deflator.csv")
write.csv(Nominal_Q, file =      "Output_Nominal_Q.csv")
write.csv(Real_Q, file =         "Output_Real_Q.csv")
write.csv(Nominal_Y, file =      "Output_Nominal_Y.csv")
write.csv(Real_Y, file =         "Output_Real_Y.csv")
write.csv(Test.equality, file =  "Output_Summary.csv")
```


To do: 
- Need to include control to ensure that all deflators are 100 in year 2013.
- In Test.equality$Value, need to sum up filled in fields and divide by total B1.g.
- In Test.equality$Value, need to count filled in cells and display missing.
- Find source of bug that prevents Knitr from creating the word document.
- Output csv. files.
- If possible e-mail markdown outputs to Herry via Outlook
- Convert evrything to to time series
- Start graphing.
